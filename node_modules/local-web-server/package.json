{
  "name": "local-web-server",
  "version": "0.5.15",
  "description": "Lightweight static web server, zero configuration. Perfect for front-end devs.",
  "bin": {
    "ws": "./bin/ws.js"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "lint": "jshint bin/ws.js; echo;"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/local-web-server"
  },
  "author": {
    "name": "Lloyd Brookes"
  },
  "dependencies": {
    "command-line-args": "~0.5.0",
    "compression": "^1.0.2",
    "config-master": "~0.2.0",
    "connect": "^3.0.0",
    "console-dope": "~0.3.0",
    "home-path": "~0.1.1",
    "morgan": "^1.0.0",
    "object-tools": "^1.0.3",
    "serve-index": "^1.0.2",
    "serve-static": "^1.2.2",
    "stream-log-stats": "~0.1.0",
    "typical": "^1.0.0"
  },
  "local-web-server": {
    "mime": {
      "text/plain": [
        "php"
      ]
    }
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/local-web-server.svg)](https://www.npmjs.org/package/local-web-server)\n[![npm module downloads per month](http://img.shields.io/npm/dm/local-web-server.svg)](https://www.npmjs.org/package/local-web-server)\n[![Dependency Status](https://david-dm.org/75lb/local-web-server.svg)](https://david-dm.org/75lb/local-web-server)\n![Analytics](https://ga-beacon.appspot.com/UA-27725889-12/local-web-server/README.md?pixel)\n\n#local-web-server\nFires up a simple, CORS-enabled, static web server on a given port. Use for local web development or file sharing (directory browsing enabled).\n\n![local-web-server](http://75lb.github.io/local-web-server/ws.gif)\n\n##Install\nEnsure [node.js](http://nodejs.org) is installed first. Linux/Mac users may need to run the following commands with `sudo`.\n\n###Globally\n```sh\n$ npm install -g local-web-server\n```\n\n###Bundled with your project\n```sh\n$ npm install local-web-server --save-dev\n```\n\nThen add an `start` script to your `package.json` (the standard npm approach):\n```json\n{\n  \"name\": \"my-web-app\",\n  \"version\": \"1.0.0\",\n  \"scripts\": {\n    \"start\": \"ws\"\n  }\n}\n```\nThis simplifies a rather specific-looking instruction set like:\n\n```sh\n$ npm install\n$ npm install -g local-web-server\n$ ws\n```\n\nto the following, server implementation and launch details abstracted away:\n```sh\n$ npm install\n$ npm start\n```\n\n##Usage\n```\nUsage\n$ ws <server options>\n$ ws --config\n$ ws --help\n\nServer\n-p, --port <number>          Web server port\n-f, --log-format <string>    If a format is supplied an access log is written to stdout. If not,\n                             a statistics view is displayed. Use a preset ('none', 'dev',\n                             'combined', 'short', 'tiny' or 'logstalgia') or supply a custom format\n                             (e.g. ':method -> :url').\n-d, --directory <string>     Root directory, defaults to the current directory\n-c, --compress               Enables compression\n-r, --refresh-rate <number>  Statistics view refresh rate in ms. Defaults to 500.\n\nMisc\n-h, --help                   Print these usage instructions\n--config                     Print the stored config\n```\n\nFrom the folder you wish to serve, run:\n```sh\n$ ws\nserving at http://localhost:8000\n```\n\nIf you wish to serve a different directory, run:\n```sh\n$ ws -d ~/mysite/\nserving /Users/Lloyd/mysite at http://localhost:8000\n```\n\nIf you wish to override the default port (8000), use `--port` or `-p`:\n```sh\n$ ws --port 9000\nserving at http://localhost:9000\n```\n\nTo add compression, reducing bandwidth, increasing page load time (by 10-15% on my Macbook Air)\n```sh\n$ ws --compress\n```\n\n###Logging\nPassing a value to `--log-format` will write an access log to `stdout`.\n\nEither use a built-in [morgan](https://github.com/expressjs/morgan) logger preset:\n```sh\n$ ws --log-format short\n```\n\nOr a custom [morgan](https://github.com/expressjs/morgan) log format:\n```sh\n$ ws -f ':method -> :url'\n```\n\nOr silence:\n```sh\n$ ws -f none\n```\n\n##Storing default options\nTo store per-project options, saving you the hassle of inputting them everytime, store them in the `local-web-server` property of your project's `package.json`:\n```json\n{\n  \"name\": \"my-project\",\n  \"version\": \"0.11.8\",\n  \"local-web-server\":{\n    \"port\": 8100\n  }\n}\n```\n\nOr in a `.local-web-server.json` file stored in the directory you want to serve (typically the root folder of your site):\n```json\n{\n  \"port\": 8100,\n  \"log-format\": \"tiny\"\n}\n```\n\nOr store global defaults in a `.local-web-server.json` file in your home directory.\n```json\n{\n  \"port\": 3000,\n  \"refresh-rate\": 1000\n}\n```\n\nAll stored defaults are overriden by options supplied at the command line.\n\nTo view your stored defaults, run:\n\n```sh\n$ ws --config\n```\n\n##mime-types\nYou can set additional mime-type/extension mappings, or override the defaults by setting a `mime` value in your local config. This value is passed directly to [mime.define()](https://github.com/broofa/node-mime#mimedefine). Example: \n\n```json\n{\n    \"mime\": {\n        \"text/plain\": [ \"php\", \"pl\" ]\n    }\n}\n```\n\n##Use with Logstalgia\nlocal-web-server is compatible with [logstalgia](http://code.google.com/p/logstalgia/).\n\n###Install Logstalgia\nOn MacOSX, install with [homebrew](http://brew.sh):\n```sh\n$ brew install logstalgia\n```\n\nAlternatively, [download a release for your system from github](https://github.com/acaudwell/Logstalgia/releases/latest).\n\nThen pipe the `logstalgia` output format directly into logstalgia for real-time visualisation:\n```sh\n$ ws -f logstalgia | logstalgia -\n```\n\n![local-web-server with logstalgia](http://75lb.github.io/local-web-server/logstagia.gif)\n\n##Use with glTail\nTo use with [glTail](http://www.fudgie.org), write your log to disk using the \"default\" format:\n```sh\n$ ws -f default > web.log\n```\n\nThen specify this file in your glTail config:\n\n```yaml\nservers:\n    dev:\n        host: localhost\n        source: local\n        files: /Users/Lloyd/Documents/MySite/web.log\n        parser: apache\n        color: 0.2, 0.2, 1.0, 1.0\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/local-web-server/issues"
  },
  "homepage": "https://github.com/75lb/local-web-server",
  "_id": "local-web-server@0.5.15",
  "_from": "local-web-server@"
}
