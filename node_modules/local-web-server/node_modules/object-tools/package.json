{
  "name": "object-tools",
  "author": {
    "name": "Lloyd Brookes",
    "email": "75pound@gmail.com"
  },
  "version": "1.1.1",
  "description": "Useful functions for working with objects",
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/object-tools.git"
  },
  "main": "./lib/object-tools.js",
  "keywords": [],
  "scripts": {
    "test": "tape test/*.js |tap-spec",
    "lint": "jshint lib/*.js test/*.js; echo",
    "docs": "jsdoc2md -t jsdoc2md/README.hbs lib/*.js > README.md; echo"
  },
  "devDependencies": {
    "jsdoc-to-markdown": "^0.2",
    "tap-spec": "^0.2.0",
    "tape": "^2.13.2"
  },
  "dependencies": {
    "array-tools": "^1.1.4",
    "typical": "^1.0.0"
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/object-tools.svg)](https://www.npmjs.org/package/object-tools)\n[![npm module downloads per month](http://img.shields.io/npm/dm/object-tools.svg)](https://www.npmjs.org/package/object-tools)\n[![Build Status](https://travis-ci.org/75lb/object-tools.svg?branch=master)](https://travis-ci.org/75lb/object-tools)\n[![Dependency Status](https://david-dm.org/75lb/object-tools.svg)](https://david-dm.org/75lb/object-tools)\n\n\n#object-tools\nUseful functions for working with objects\n\n####Example\n```js\nvar o = require(\"object-tools\");\n```\n\n\n\n**Contents**\n* [extend(...object)](#module_object-tools.extend)\n* [clone(input)](#module_object-tools.clone)\n* [omit(object, toOmit)](#module_object-tools.omit)\n* [every(object, iterator)](#module_object-tools.every)\n* [each(object, callback)](#module_object-tools.each)\n* [exists(object, query)](#module_object-tools.exists)\n* [without(object, toRemove)](#module_object-tools.without)\n\n\n\n\n\n\n\n<a name=\"module_object-tools.extend\"></a>\n###extend(...object)\nMerge a list of objects, left to right, into one.\n\n\n- ...object `Object` a sequence of Object instances to be extended  \n\n\n**Returns**: `Object`\n\n####Example\n```js\n> o.extend({ one: 1, three: 3 }, { one: \"one\", two: 2 }, { four: 4 });\n{ one: 'one',\n  three: 3,\n  two: 2,\n  four: 4 }\n```\n\n\n\n<a name=\"module_object-tools.clone\"></a>\n###clone(input)\nClones an object or array\n\n\n- input `Object | Array` the input to clone  \n\n\n**Returns**: `Object | Array`\n\n####Example\n```js\n> date = new Date()\nFri May 09 2014 13:54:34 GMT+0200 (CEST)\n> o.clone(date)\n{}  // a Date instance doesn't own any properties\n> date.clive = \"hater\"\n'hater'\n> o.clone(date)\n{ clive: 'hater' }\n> array = [1,2,3]\n[ 1, 2, 3 ]\n> newArray = o.clone(array)\n[ 1, 2, 3 ]\n> array === newArray\nfalse\n```\n\n\n\n<a name=\"module_object-tools.omit\"></a>\n###omit(object, toOmit)\nReturns a clone of the input object, minus the specified properties\n\n\n- object `Object` the object to clone  \n- toOmit `Array.<string>` an array of property names to omit from the clone  \n\n\n**Returns**: `Object`\n\n####Example\n```js\n> o.omit({ one: 1, two: 2, three: 3, four: 4 }, [ \"two\", \"four\" ]);\n{ one: 1, three: 3 }\n```\n\n\n\n<a name=\"module_object-tools.every\"></a>\n###every(object, iterator)\nReturns true if the supplied iterator function returns true for every property in the object\n\n\n- object `Object` the object to inspect  \n- iterator `function` the iterator function to run against each key/value pair, the args are `(value, key)`.  \n\n\n**Returns**: `Boolean`\n\n####Example\n```js\n> function aboveTen(input){ return input > 10; }\nundefined\n> o.every({ eggs: 12, carrots: 30, peas: 100 }, aboveTen)\ntrue\n> o.every({ eggs: 6, carrots: 30, peas: 100 }, aboveTen)\nfalse\n```\n\n\n\n<a name=\"module_object-tools.each\"></a>\n###each(object, callback)\nRuns the iterator function against every key/value pair in the input object\n\n\n- object `Object` the object to iterate  \n- callback `function` the iterator function to run against each key/value pair, the args are `(value, key)`.  \n\n\n\n\n####Example\n```js\n> var total = 0;\nundefined\n> function addToTotal(n){ total += n; }\nundefined\n> o.each({ eggs: 3, celery: 2, carrots: 1 }, addToTotal)\nundefined\n> total\n6\n```\n\n\n\n<a name=\"module_object-tools.exists\"></a>\n###exists(object, query)\nreturns true if the key/value pairs in `query` also exist identically in `object`.\nAlso supports RegExp values in `query`. If the `query` property begins with `!` then test is negated.\n\n\n- object `Object` the object to examine  \n- query `Object` the key/value pairs to look for  \n\n\n**Returns**: `boolean`\n\n####Example\n```js\n> o.exists({ a: 1, b: 2}, {a: 0})\nfalse\n> o.exists({ a: 1, b: 2}, {a: 1})\ntrue\n> o.exists({ a: 1, b: 2}, {\"!a\": 1})\nfalse\n> o.exists({ name: \"clive hater\" }, { name: /clive/ })\ntrue\n> o.exists({ name: \"clive hater\" }, { \"!name\": /ian/ })\ntrue\n```\n\n\n\n<a name=\"module_object-tools.without\"></a>\n###without(object, toRemove)\nreturns a clone of the object minus the specified properties.\n\n\n- object `Object` the input object  \n- toRemove `string | Array.<string>` a single property, or array of properties to omit  \n\n\n**Returns**: `Object`\n\n####Example\n```js\n> o.without({ a: 1, b: 2, c: 3}, \"b\")\n{ a: 1, c: 3 }\n> o.without({ a: 1, b: 2, c: 3}, [\"b\", \"a\"])\n{ c: 3 }\n```\n\n\n\n\n\n\n\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/object-tools/issues"
  },
  "homepage": "https://github.com/75lb/object-tools",
  "_id": "object-tools@1.1.1",
  "_from": "object-tools@^1.0.3"
}
